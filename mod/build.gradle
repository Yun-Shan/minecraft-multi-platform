plugins {
    alias(libs.plugins.architectury.loom) apply false
    alias(libs.plugins.architectury.plugin)
    alias(libs.plugins.shadow) apply false
}

var modProject = project

architectury {
    minecraft = libs.versions.minecraft.get()
}

allprojects {
    group = rootProject.maven_group
    version = modProject.mod_version
}

subprojects {
    apply plugin: libs.plugins.architectury.loom.get().pluginId
    apply plugin: libs.plugins.architectury.plugin.get().pluginId
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    dependencies {
        minecraft libs.minecraft
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${libs.versions.parchmentmc.get()}@zip")
        }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }

    tasks.build {
        var inputFiles = tasks.remapJar.outputs
        var outputDir = rootProject.layout.buildDirectory.dir("libs")
        inputs.files(inputFiles)
        outputs.dir(outputDir)
        doLast {
            if (project.path == ":mod:common") return
            copy {
                from(inputFiles)
                into(outputDir)
            }
        }
    }
}
